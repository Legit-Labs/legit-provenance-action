name: Legit Provenance Generator

permissions:
  contents: read

env:
  GENERATOR_BINARY: /tmp/provenance-generator
  PROVENANCE_NAME: legit-provenance.intoto.jsonl
  PROVENANCE_PATH: /tmp/signed-prov.intoto.jsonl

on:
  workflow_call:
    inputs:
      base64-subjects:
        description: "Artifacts for which to generate provenance, formatted the same as the output of sha256sum (SHA256 NAME\\n[...]) and base64 encoded."
        required: true
        type: string
    secrets:
      api-token:
        required: true
      legit-api-url:
        required: true

jobs:
  generator:
    outputs:
      provenance-sha256: ${{ steps.sign-prov.outputs.provenance-sha256 }}
      provenance-name: ${{ steps.sign-prov.outputs.provenance-name }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Needed to create an OIDC token for keyless signing.
      contents: read
      actions: read # Needed to read workflow info.
    steps:
      - uses: actions/setup-go@v3
      
      - name: Generate binary
        env:
          LEGIT_REMOTE_PROVENANCE_COMMIT: b6c4db20cbbe9ec7d723c34eaae86f1195bef731
        run: |
          git clone --no-checkout https://github.com/Legit-Labs/legit-remote-provenance.git
          cd legit-remote-provenance
          git checkout "${LEGIT_REMOTE_PROVENANCE_COMMIT}"
          cd cmd/legit_remote_provenance
          go build -o "${GENERATOR_BINARY}"

      - name: Create and sign provenance
        id: sign-prov
        env:
          GITHUB_CONTEXT: "${{ toJSON(github) }}"
          SUBJECTS: "${{ inputs.base64-subjects }}"
        run: |
          ${GENERATOR_BINARY} -subjects-base64 "${SUBJECTS}" -api-token "${{ secrets.api-token }}" -url "${{ secrets.legit-api-url }}" > "${PROVENANCE_PATH}"

      - name: Upload the signed provenance
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3.1.0
        with:
          name: "${{ env.PROVENANCE_NAME }}"
          path: "${{ env.PROVENANCE_PATH }}"
          if-no-files-found: error
